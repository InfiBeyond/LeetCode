Homework Lesson 4
1. slide 9 countHop
Homework Lesson 3
1. slide 9 2D STRING VECTORS
	
int countStep(int n)
{
    if (n == 1 || n == 0)
        return 1;
    else if (n == 2)
        return 2;
    else if (n < 0)
        return 0;
    else
        return countStep(n - 3) + countStep(n - 2) + countStep(n - 1);
}

Comments: good job :)
——————————分割线——————————

2.slide 10 2016 S2

int findMin(vector<int>s1,vector<int>s2,int N)
{

    if(N==-1)
    {
        return 0;
    }
    return max(s1[N],s2[N])+findMin(s1,s2,N);
}
int findMax(vector<int>s1,vector<int>s2,int N,int i = 0)
{
    if(N==-1)
    {
        return 0;
    }
    return max(s1[N],s2[i])+findMax(s1,s2,N-1, i+1);
}
int main()
{
    int q;
    cin >> q;
    int N;
    cin >> N;
    vector <int> s1;
    vector <int> s2;
    int temp;
    int sum = 0;
    for(int i = 0; i < N; i++)
    {
        cin >> temp;
        s1.emplace_back(temp);
    }
    for(int i = 0; i < N; i++)
    {
        cin >> temp;
        s2.emplace_back(temp);
    }
    sort(s1.begin(),s1.end());
    sort(s2.begin(),s2.end());
    int test = (q==1) ? findMin(s1,s2,N-1):findMax(s1,s2,N-1);
    cout << test;
    return 0;
}


Comments: double check your findMin。 It is currently an infinite loop. 
Make sure your recursive call gets closer to the base case
You can also submit all CCC questions to the CCC grader
——————————分割线——————————

3.slide 28 birthday

struct Date
{
    int year,month,day;
};
struct Student
{
    string name;
    int studentNum, grade;
    Date bithday;
};
bool compare_birthdays(Date b1, Date b2)
{
    if(b1.year > b2.year)
        return false;
    else if(b1.year < b2.year)
        return true;
    if(b1.month < b2.month)
        return true;
    else if(b1.month > b2.month)
        return false;
    if(b1.day < b2.day)
        return true;
    return false;

}
vector<Date> sortStudents_birthday(vector<student> s)
{
    int n = s.size();
    int stop = 0;
    for(int i=0; i<n; i++)
    {
        stop = 0;
        check++;
        for(int j=0; j<n-i-1; j++)
        {
            check++;
            if(!compare_birthdays(s[j].birthday, s[j+1].birthday))
            {
                swap(s[j],s[j+1]);
                stop++;
            }
        }
        if(stop == 0)
          break;
    }
    return s;

}

Comments: You can refer to the final bubble sort version to simplify the sortStudents.

