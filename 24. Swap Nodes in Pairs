/*
24. Swap Nodes in Pairs
Medium

Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes, only nodes itself may be changed.

 

Example:

Given 1->2->3->4, you should return the list as 2->1->4->3.
*/

class Solution {
public:
  ListNode *swapPairs(ListNode *head) {
    if (!head || !head->next) return head;    
 
    ListNode d(0);
    d.next = head;
    head = &d;
 
    while (head && head->next && head->next->next) {
      auto n1 = head->next;
      auto n2 = n1->next;
 
      n1->next = n2->next;
      n2->next = n1;
 
      head->next = n2;
      head = n1;
    }
    return d.next;
  }
};
