Homework Lesson2 
1. slide 24 COUNT DIGIT

#include <iostream>

using namespace std;

int main()
{
    int num;
    cin >> num;
    int countNum = 0;
    for(int i = 0; i >= 0; i++)
    {
        if(num != 0)
        {
            countNum ++;
            num/=10;
        }
        else
        {
            break;
        }
    }
    cout << countNum;

    return 0;
}

——————————分割线——————————

2. slide 25 CHECKERBOARD

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin >> n;
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j <= n; j++)
        {
            if((i%2==0 && j%2!=0)|| (i%2!=0 && j%2==0))
            {
                cout << "white";
            }
            else
            {
                cout << "black";
            }
            if(j!=n)
            {
               cout << "-";
            }
        }
        cout << endl;
    }

    return 0;
}

——————————分割线——————————

3. slide 26 MODIFIED CHECKERBOARD

#include <iostream>

using namespace std;

int main()
{
    int n;
    cin >> n;
    cin.ignore();
    string color;
    string test = "";
    int ans = 0;
    int start = 0;
    int k = 1;
    for(int i = 1; i <= n; i++)
    {
        getline(cin,color);
        for(int j = 0; j < color.length(); j++)
        {
            if(color.substr(j,1)==" ")
            {
                test = color.substr(start,j-start);
                start = j+1;
            }
            else if (j==color.length()-1)
            {
                test = color.substr(start,j+1-start);
                start = 0;
            }
            if(test != "")
            {

                if((i%2==0 && k%2!=0)|| (i%2!=0 && k%2==0))
                {
                    if (test != "white")
                    {
                        ans++;
                    }

                }
                else
                {
                    if (test != "black")
                    {
                       ans++;
                    }
                }
                k++;
                test = "";
            }
        }
        k = 1;
    }
    cout << ans;


    return 0;
}

Comments: you can just use cin instead of getline.
Also, do not put color.length() or vec.size() or other get size functions inside your for-loop condtion. 
This condition is checked at the end of every iteration, but getting the size requires going through 
the string/vector. You do not need to get size in every loop, you can just store the size somewhere and 
do an integer comparison, which is a lot more efficient. 

——————————分割线——————————

4. slide 40 PRINT EVERY OTHER

#include <iostream>

using namespace std;

int main()
{
    int arr[10];
    for(int i = 0; i < 10; i++)
    {
        cin >> arr[i];
        if((i+1)%2==0)
        {
            cout << arr[i] << " ";
        }
    }



    return 0;
}
Comments: good job :)

——————————分割线——————————

5. slide 44 NUMBER PAIR SUM

#include <iostream>

using namespace std;

int main()
{
    int len;
    cout << "Enter length of array: "<< endl;
    cin >> len;
    int arr[len];
    for(int i = 0; i < len; i++)
    {
        cin >> arr[i];
    }
    int n;
    cin >> n;
    int numSum;
    cin >> numSum;
    int countNum = 0;
    for(int i = 0; i < len-1; i++)
    {
        for(int j = 1; j < len; j++)
        {
            if(arr[i]+arr[j]==numSum)
            {
                countNum++;
            }
        }
    }
    cout << ((countNum>=n)? "true":"false" );


    return 0;
}

——————————分割线——————————

6. slide 25 (using vectors)

#include <iostream>
#include <vector>

using namespace std;

int main()
{
    int n;
    cin >> n;
    vector<string> str;
    for(int i = 1; i <= n; i++)
    {
        for(int j = 1; j <= n; j++)
        {
            if((i%2==0 && j%2!=0)|| (i%2!=0 && j%2==0))
            {
                str.emplace_back("white");
            }
            else
            {
                str.emplace_back("black");
            }
            if(j!=n)
            {
                str.emplace_back("-");
            }
        }
        for(int j = 0; j < str.size(); j++)
        {
            cout << str.at(j);
        }
        str.clear();
        cout << endl;
    }


    return 0;
}

       






