/*
18. 4Sum
Medium

Given an array nums of n integers and an integer target, are there elements a, b, c, and d in nums such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note:

The solution set must not contain duplicate quadruplets.

Example:

Given array nums = [1, 0, -1, 0, -2, 2], and target = 0.

A solution set is:
[
  [-1,  0, 0, 1],
  [-2, -1, 1, 2],
  [-2,  0, 0, 2]
]
*/

class Solution {
public:
  vector<vector<int>> fourSum(vector<int> &num, int target) {
    set<vector<int>> h; 
 
    sort(num.begin(), num.end());
 
    int n = num.size();
 
    for (int i = 0; i < n; i++) {
      for (int j = i + 1; j < n; j++) {
        for(int k = j + 1; k < n; k++) {
          int t = target - num[i] - num[j] - num[k];
          if (t < num[k]) break;
          if (!std::binary_search(num.begin() + k + 1, num.end(), t)) continue;          
          h.insert({num[i], num[j], num[k], t});          
        }
      }
    }
    return vector<vector<int>>(begin(h), end(h));
  }
};
